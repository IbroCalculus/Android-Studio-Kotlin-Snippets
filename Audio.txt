
NB: Check that of Java for more, similar

Create directory of type raw and place sound files inside.

============= PLAY SOUND ===============

    //@! private lateinit var mediaPlayer: MediaPlayer

    private var mediaPlayer: MediaPlayer? = null
    private lateinit var btn_Play: Buttons


        //@! mediaPlayer = MediaPlayer.create(this, R.raw.sample)
        btn_Play = findViewById(R.id.btn_Play)

---------------------- PLAY AUDIO ---------------------------
        btn_Play.setOnClickListener {
            //@! mediaPlayer.start()

            if (mediaPlayer==null){
                mediaPlayer = MediaPlayer.create(this, R.raw.sound2)
                initializeSeekBar()  // Method created below, if working with seekbar control               
            }
            mediaPlayer?.start()
        }

---------------------- PAUSE AUDIO ---------------------------
        btnPlay.setOnClickListener {
            mediaPlayer?.pause()
        }

---------------------- STOP AUDIO ---------------------------
        btnPlay.setOnClickListener {
            mediaPlayer?.stop()
            mediaPlayer?.reset()
            mediaPlayer?.release()
            mediaPlayer = null

            // This part, if working with seekbar, check method created below
            handler.removeCallbacks(runnable)
            seekBar1.progress = 0
        }

---------------------- ON COMPLETE PLAYING AUDIO FILE -----------------------------------
        mediaPlayer.setOnCompletionListener {
            Toast.makeText(applicationContext, "Completed", Toast.LENGTH_LONG).show()
        }

        // mediaPlayer.isLooping = true

------------------------- SEEKBAR CONTROL ---------------------------

    private lateinit var seekBar1 : SeekBar
    private lateinit var tvDisplay : TextView
    private lateinit var runnable: Runnable
    private lateinit var handler: Handler

        seekBar1 = findViewById(R.id.seekBar1)
        tvDisplay = findViewById(R.id.tvDisplay)
        handler = Handler(Looper.getMainLooper())


    private fun initializeSeekBar(){

        seekBar1.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener{
            override fun onProgressChanged(p0: SeekBar?, p1: Int, p2: Boolean) {
                tvDisplay.text = "$p1";
                if(p2) mediaPlayer?.seekTo(p1)
            }

            override fun onStartTrackingTouch(p0: SeekBar?) {
            }

            override fun onStopTrackingTouch(p0: SeekBar?) {
            }
        })
        seekBar1.max = mediaPlayer!!.duration
        runnable = Runnable {
            seekBar1.progress = mediaPlayer!!.currentPosition
            handler.postDelayed(runnable, 1000)
        }
        handler.postDelayed(runnable, 1000)
    }


============ HORIZONTAL PROGRESS BAR ============

Place a horizontal progress bar of id, progressBar1
Place a button to start the progress of id, btn1



        val progressBar1 : ProgressBar = findViewById(R.id.progressBar1)
        val btn1 = findViewById<Button>(R.id.btn1)


//THE HIGHER THE VALUE OF progressBar1.max, THE SMOOTHER THE ANIMATION
//Optionally, set indterminate = true

        val startProgress = 1
        val endProgress = 990
        progressBar1.max = 1000
        progressBar1.progress = startProgress

        btn1.setOnClickListener {
            ObjectAnimator.ofInt(progressBar1, "progress", endProgress)
                .setDuration(2000)
                .start()
        }

-------------- Example -------------

        var state = 0
        val startProgress = 1
        val endProgress = 990
        progressBar1.max = 1000
        progressBar1.progress = 500

        btn1.setOnClickListener {
            if(state == 0){
                ObjectAnimator.ofInt(progressBar1, "progress", endProgress)
                    .setDuration(2000)
                    .start()
                state = 1
            } else if(state == 1){
                ObjectAnimator.ofInt(progressBar1, "progress", startProgress)
                    .setDuration(2000)
                    .start()
                state = 0
            }




============== CIRCULAR PROGRESS BAR ===================

implementation 'com.mikhaellopez:circularprogressbar:3.1.0' (https://github.com/lopspower/CircularProgressBar) 

NOTE: IF INDETERMINATE; 
        app:cpb_indeterminate_mode="true"

<com.mikhaellopez.circularprogressbar.CircularProgressBar
    android:id="@+id/circularProgressBar"
    android:layout_width="200dp"
    android:layout_height="200dp"
    app:cpb_background_progressbar_color="#b6bbd8"
    app:cpb_background_progressbar_width="5dp"
    app:cpb_progress_direction="to_right"
    app:cpb_progressbar_color="#3f51b5"
    app:cpb_progressbar_width="10dp"
    app:cpb_round_border="false" />


        val circularProgressBar = findViewById<CircularProgressBar>(R.id.circularProgressBar)
        val btn1 : Button = findViewById(R.id.btn1)

        btn1.setOnClickListener {

            circularProgressBar.apply {
                progressMax = 100f
                setProgressWithAnimation(50f, 1000)
                progressBarWidth = 5f
                backgroundProgressBarWidth = 7f
                progressBarColor = Color.GREEN
            }

        }


CAN CHECK THE REFERENCE GITHUB REPO ON USAGE. ie;

circularProgressBar.apply {
    // Set Progress
    progress = 65f
    // or with animation
    setProgressWithAnimation(65f, 1000) // =1s

    // Set Progress Max
    progressMax = 200f

    // Set ProgressBar Color
    progressBarColor = Color.BLACK
    // or with gradient
    progressBarColorStart = Color.GRAY
    progressBarColorEnd = Color.RED
    progressBarColorDirection = CircularProgressBar.GradientDirection.TOP_TO_BOTTOM

    // Set background ProgressBar Color
    backgroundProgressBarColor = Color.GRAY
    // or with gradient
    backgroundProgressBarColorStart = Color.WHITE
    backgroundProgressBarColorEnd = Color.RED
    backgroundProgressBarColorDirection = CircularProgressBar.GradientDirection.TOP_TO_BOTTOM

    // Set Width
    progressBarWidth = 7f // in DP
    backgroundProgressBarWidth = 3f // in DP

    // Other
    roundBorder = true
    startAngle = 180f
    progressDirection = CircularProgressBar.ProgressDirection.TO_RIGHT
}
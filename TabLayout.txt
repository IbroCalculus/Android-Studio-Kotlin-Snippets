1 ============ TABLAYOUT WITH FRAGMENT (Switching between fragments using tablayout =============

  - Create fragments, ie MondayFragment, TuesdayFragment, WednesdayFragment -

  --- In main xml ---

  - Add tablayout, within it add tabItems, ie tabItem_Monday, tabItem_Tuesday, tabItem_Wednesday
  - Add fragment containerView, ie fragmentContainerView1

---- in .kt ----------

    lateinit var tabLayout : TabLayout
    lateinit var fragmentContainerView1 : FragmentContainerView


        tabLayout = findViewById(R.id.tabLayout)
        fragmentContainerView1 = findViewById(R.id.fragmentContainerView1)


        val mondayFragment = MondayFragment()
        val tuesdayFragment = TuesdayFragment()
        val wednesdayFragment = WednesdayFragment()


        tabLayout.addOnTabSelectedListener(object : TabLayout.OnTabSelectedListener{
            override fun onTabSelected(tab: TabLayout.Tab?) {
                when(tab!!.position){
                    0 -> {
                        supportFragmentManager.beginTransaction().apply {
                            replace(R.id.fragmentContainerView1, mondayFragment)
                            addToBackStack(null) //OPTIONAL, only if want it added to backstack
                            commit()
                        }

                }
                    1 -> {
                        supportFragmentManager.beginTransaction().apply {
                            replace(R.id.fragmentContainerView1, tuesdayFragment)
                            addToBackStack(null) //OPTIONAL, only if want it added to backstack
                            commit()
                        }
                    }


                    2 -> {
                        supportFragmentManager.beginTransaction().apply {
                            replace(R.id.fragmentContainerView1, wednesdayFragment)
                            addToBackStack(null) //OPTIONAL, only if want it added to backstack
                            commit()
                        }
                    }
                }
            }

            override fun onTabUnselected(tab: TabLayout.Tab?) {
            }

            override fun onTabReselected(tab: TabLayout.Tab?) {
            }

        })



2 ============== TABLAYOUT WITH VIEWPAGER2 =================

  - Create fragments, ie MondayFragment, TuesdayFragment, WednesdayFragment -

  --- In main xml ---

  - Add tablayout (ie tabLayout), within it add tabItems, ie tabItem_Monday, tabItem_Tuesday, tabItem_Wednesday
  - Add ViewPager2, ie viewPager


--- Create an adapter, ie PagerAdapter;

class PagerAdapter(fragmentActivity: FragmentActivity) : FragmentStateAdapter(fragmentActivity) {
}

   - Implement the 2 members ------- 

class PagerAdapter(fragmentActivity: FragmentActivity) : FragmentStateAdapter(fragmentActivity) {
    override fun getItemCount(): Int {
        TODO("Not yet implemented")
    }

    override fun createFragment(position: Int): Fragment {
        TODO("Not yet implemented")
    }

   - Modify as shown, 3 fragments in this reference -----

    override fun getItemCount() = 3

    override fun createFragment(position: Int): Fragment {
        return when (position){
            0 -> {MondayFragment()}
            1 -> {TuesdayFragment()}
            2 -> {WednesdayFragment()}
            else -> {throw Resources.NotFoundException("Position not found!")}
        }
    }


---- main .kt -----

        viewPager = findViewById(R.id.viewPager)
        tabLayout = findViewById(R.id.tabLayout)

        viewPager.adapter = PagerAdapter(this)

        TabLayoutMediator(tabLayout,viewPager){ tab, index ->
        tab.text = when(index){
            0 -> {"Monday"}
            1 -> {"Tuesday"}
            2 -> {"Wednesday"}
            else -> {throw Resources.NotFoundException("Position not found")}
        }
        }.attach()